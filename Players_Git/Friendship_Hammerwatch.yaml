# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Hammerwatch Template

game: Hammerwatch
requires:
  version: 0.4.6 # Version of Archipelago required for this yaml to work as expected.

Hammerwatch:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Determines the goal of the seed. Some goals are specific to certain campaigns
    # Options starting with "Castle" are played in the Castle Hammerwatch campaign, while "Temple" options are played in the Temple of the Sun Campaign
    # Castle All Bosses: Defeat all the bosses in Castle Hammerwatch. Escaping is NOT required
    # Castle Escape: Find at least 12 Strange Planks, defeat Worldfire, and escape with your life
    # Castle Plank Hunt: Find a certain number of Strange Planks in Castle Hammerwatch
    # Temple All Bosses: Defeat all the bosses in the Temple of the Sun
    # Temple Plank Hunt: Find a certain number of Strange Planks in the Temple of the Sun
    # Temple Pyramid of Fear: Unlock and complete the Pyramid of Fear
    castle_all_bosses: 0
    castle_escape: 50
    castle_plank_hunt: 0
    temple_all_bosses: 0
    temple_plank_hunt: 0
    temple_pyramid_of_fear: 0

  planks_required_count:
    # Determines the amount of Strange Planks required to win the game for the Plank Hunt goals.
    # This option does nothing in other goals
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 25
    12: 50
    random: 0
    random-low: 0
    random-high: 0

  extra_plank_percent:
    # Determines the percentage of extra Strange Planks in the item pool
    # For the Castle Escape goal, the required planks count is 12
    # For the Plank Hunt goals, the required planks count is determined by the Planks to Win setting
    # Formula: Total Planks = required planks * (1 + Extra Plank Percentage / 100)
    # This option does nothing in other goals
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  difficulty:
    # What difficulty the game will be played on
    easier: 0
    medium: 50
    hard: 0

  exit_randomization:
    # Randomizes where level exits and portals lead
    # No Boss Exits: exits to boss levels will not be shuffled
    # All: all exits including bosses will be shuffled
    off: 50
    no_boss_exits: 0
    all: 0

  er_act_range:
    # Determines the maximum number of acts away levels will try to be connected to each other in exit randomization
    # For example with an act range of 1 Prison exits will mostly only connect to other Prison exits or Armory exits
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 3
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  random_start_exit:
    # If Exit Randomization is on, will place you at a random exit at the start of the game
    # Use the /t command in game to return if you get stuck!
    false: 50
    true: 0

  random_start_exit_act:
    # Determines the act in which you start if Randomize Start Location is on
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 4
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  gate_shuffle:
    # Shuffles the type of bronze, silver, and gold gates
    false: 0
    true: 50

  shop_shuffle:
    # Shuffles the shop vendors around so that they may be different from their normal locations
    false: 0
    true: 50

  shop_upgrade_category_shuffle:
    # Shuffles the shop upgrades between different categories of shops
    # Group: upgrades sharing the same base name (Damage 1, 2, 3, etc.) are shuffled together in the same category
    # All: upgrades are shuffled amongst all categories, regardless of prerequisites
    off: 0
    group: 0
    all: 50

  shop_cost_min:
    # The lowest percent each shop upgrade cost can be multiplied by
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 500
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  shop_cost_max:
    # The highest percent each shop upgrade cost can be multiplied by
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 500
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  enemy_shuffle:
    # Shuffles the locations of enemies, spawners, mini-bosses, and towers in each level
    false: 50
    true: 0

  enemy_shuffle_act_range:
    # How many acts away enemies can be shuffled to
    # When set to 0 only enemies on the same act will be shuffled
    # When set to 3 enemies can be shuffled to any act
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  bonus_behavior:
    # Determines how bonus chest locations in bonus levels are handled
    # None: Don't include any bonus chest items/locations
    # Necessary: Include bonus level locations for each extra item in the pool
    # All: Include all bonus chest items/locations. Extra items will replace junk items as normal
    none: 0
    necessary: 0
    all: 50

  randomize_bonus_keys:
    # Whether bonus keys are shuffled into the pool
    false: 0
    true: 50

  remove_lives:
    # Removes extra lives (Ankhs) from the item pool and replaces them with filler.
    # Recommended to have enabled when playing with the infinite lives or no extra lives modifiers
    false: 50
    true: 0

  randomize_recovery_items:
    # Whether recovery items (such as apples and mana crystals) are shuffled into the pool
    false: 0
    true: 50

  randomize_secrets:
    # (TotS only) Whether items from random secrets (small rooms with cracked walls in the cave levels) are shuffled into the item pool
    false: 0
    true: 50

  randomize_puzzles:
    # Whether items from peg puzzles are shuffled into the item pool
    false: 0
    true: 50

  randomize_enemy_loot:
    # Whether items dropped by minibosses and towers are shuffled into the item pool
    false: 0
    true: 50

  buttonsanity:
    # Whether the effects of buttons and switches are shuffled into the item pool
    # Normal: button effects can be found anywhere in the multiworld
    # Insanity: button effects will be split into progressive versions based on the number of buttons required to trigger the effect in vanilla
    off: 0
    normal: 0
    insanity: 50

  open_castle:
    # (Castle only) Unlocks travel to/from all floors at the start of the game. Pairs well with Act Specific Keys!
    false: 0
    true: 50

  key_mode:
    # Changes the behavior of keys
    # Vanilla: keys can be used anywhere on their respective gates
    # Act Specific: (castle only) replaces keys with versions that can only be used on a specific act
    # Floor Master: consolidates keys on a floor into a single item that unlocks all gates of that type on an entire floor
    vanilla: 0
    act_specific: 50
    floor_master: 0

  extra_keys_percent:
    # Determines the percentage of extra silver and gold keys (and mirrors in the TotS campaign) that are added to the item pool
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  big_bronze_key_percent:
    # (Castle only) What percentage of bronze keys get converted into big bronze keys, which act as 3 bronze keys each
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  shortcut_teleporter:
    # (Castle only) Enables the use of the shortcut portal at the beginning of the game. This allows early access
    # to Prison Floor 3 before the bronze gate, preventing a potential early BK
    # A return portal will also be placed so that the first two floors can be fully completed
    false: 0
    true: 50

  portal_accessibility:
    # (TotS only) Ensures rune keys will be placed locally on the floor they would normally appear so that portals are
    # more easily accessible
    false: 0
    true: 50

  no_sunbeam_damage:
    # (TotS only) Disables sunbeam damage, removing much of the long and awkward backtracking inside the temple
    false: 50
    true: 0

  treasure_shuffle:
    # Shuffles the locations of minor treasure such as coins, crates, pots, and vegetation
    false: 0
    true: 50

  pan_fragments:
    # (TotS only) If greater than 1 separates the pan into multiple fragments that are shuffled into the item pool
    # All fragments must be collected in order to purchase from the consumables merchant
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  lever_fragments:
    # (TotS only) If greater than 1 separates the pumps lever into multiple fragments that are shuffled into the item pool
    # All fragments must be collected in order to turn on the pumps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  pickaxe_fragments:
    # (TotS only) If greater than 1 separates the pickaxe into multiple fragments that are shuffled into the item pool
    # All fragments must be collected in order to break the rocks outside the temple
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_item_percent:
    # What percentage of junk items are replaced with traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_item_weights:
    # The relative weights of trap items in the item pool
    Banner Trap: 100
    Bomb Trap: 100
    Confuse Trap: 100
    Fire Trap: 100
    Frost Trap: 100
    Mana Drain Trap: 100
    Poison Trap: 100

  starting_life_count:
    # How many extra lives each player will start the game with
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    99: 50
    random: 0
    random-low: 0
    random-high: 0

  game_modifiers:
    # Enforces game modifiers to be set either true or false
    # Valid modifiers are: no_extra_lives, 1_hp, shared_hp_pool, no_hp_pickups, no_mana_regen, reverse_hp_regen,
    # infinite_lives, hp_regen, double_damage, double_lives, and 5x_mana_regen
    {}

  er_seed:
    # Determines the seed for generating the exit randomization layout. If "random" the seed will be random
    random: 50

  death_link:
    # When anybody dies, everyone dies. This also applies to all multiplayer players within a single game
    false: 50
    true: 0
